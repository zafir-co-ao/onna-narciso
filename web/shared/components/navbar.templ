package components

import "fmt"

templ Navbar(p NavbarParams) {
	<div id={ p.ID } hx-swap-oob="true">
		<nav class="bg-gray-500" x-data="{ displayMobileMenu: false }">
			<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
				<div class="flex h-16 items-center justify-between">
					<div class="flex items-center">
						<div class="hidden md:block">
							<div class="flex items-baseline space-x-4">
								for _, link := range GetMenu(p.User.Role) {
									<a
										hx-get={ link.url }
										hx-target={ p.HxTarget }
										hx-trigger="click"
										hx-swap="innerHTML"
										class={ "rounded-md cursor-pointer px-3 py-2 text-sm font-medium text-white hover:bg-gray-600 hover:bg-opacity-75", templ.KV("bg-gray-700", link.title == p.Title) }
										aria-current="page"
									>
										{ link.title }
									</a>
								}	
							</div>
						</div>
					</div>
					<div class="w-full md:w-auto md:block">
						<div class="flex items-center gap-2 md:ml-6">
							<button
								hx-get={ fmt.Sprintf("/auth/user-profile/%s", p.User.ID) }
								hx-swap="outerHTML"
								hx-target={ p.PageTarget }
								type="button"
								class="relative bg-gray-600 p-2 rounded-md hover:bg-gray-700 text-gray-200 hover:text-white focus:outline-none"
							>
								Perfil
							</button>
							<button
								hx-get="/auth/logout"
								hx-swap="none"
								type="button"
								class="relative bg-gray-600 p-2 rounded-md hover:bg-gray-700 text-gray-200 hover:text-white focus:outline-none"
							>
								Sair
							</button>
						</div>
					</div>
					<div class="-mr-2 flex md:hidden">
						<!-- Mobile menu button -->
						<button
							type="button"
							class="relative inline-flex items-center justify-center rounded-md bg-gray-500 p-2 text-gray-200 hover:bg-gray-600 hover:bg-opacity-75 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-600"
							aria-controls="mobile-menu"
							aria-expanded="false"
							@click="displayMobileMenu = !displayMobileMenu"
						>
							<span class="absolute -inset-0.5"></span>
							<span class="sr-only">Open main menu</span>
							<svg
								class="block h-6 w-6"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								aria-hidden="true"
								data-slot="icon"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
								></path>
							</svg>
							<!-- Menu open: "block", Menu closed: "hidden" -->
							<svg
								class="hidden h-6 w-6"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								aria-hidden="true"
								data-slot="icon"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M6 18 18 6M6 6l12 12"
								></path>
							</svg>
						</button>
					</div>
				</div>
			</div>
			<!-- Mobile menu, show/hide based on menu state. -->
			<div
				id="mobile-menu"
				class="md:hidden"
				x-show="displayMobileMenu"
				x-transition.duration.250ms
			>
				<div class="space-y-1 px-2 pb-3 pt-2 sm:px-3">
					for _, link := range GetMenu(p.User.Role) {
						<a
							hx-get={ link.url }
							hx-target={ p.HxTarget }
							hx-trigger="click"
							hx-swap="innerHTML"
							class={ "block cursor-pointer rounded-md px-3 py-2 text-base font-medium text-white hover:bg-gray-600 hover:bg-opacity-75", templ.KV("bg-gray-700", link.title == p.Title) }
							aria-current="page"
						>
							{ link.title }
						</a>
					}
				</div>
				<div class="border-t border-gray-700 pb-3 pt-4">
					<div class="flex items-center px-5">
						<button
							type="button"
							class="relative ml-auto flex-shrink-0 rounded-full border-2 border-transparent bg-gray-600 p-1 text200 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-600"
						>
							<span class="absolute -inset-1.5"></span>
							<span class="sr-only">View notifications</span>
							<svg
								class="h-6 w-6"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								aria-hidden="true"
								data-slot="icon"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0"
								></path>
							</svg>
						</button>
					</div>
				</div>
			</div>
		</nav>
		<header class="bg-white shadow">
			<div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
				<h1 class="text-3xl font-bold leading-tight tracking-tight text-gray-900">
					{ p.Title }
				</h1>
			</div>
		</header>
	</div>
}
