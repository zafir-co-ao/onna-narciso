package components

import (
	"context"
	"fmt"
	"github.com/zafir-co-ao/onna-narciso/internal/scheduling"
	"io"
	"strconv"
	"strings"
	"time"
)

type _appointmentState struct {
	hxGet       string
	startHour   int
	appointment scheduling.AppointmentOutput
}

type _appointmentStateOpt func(*_appointmentState)

func WithHxGet(hxGet string) _appointmentStateOpt {
	return func(s *_appointmentState) {
		s.hxGet = hxGet
	}
}

func (s *_appointmentState) Render(ctx context.Context, w io.Writer) error {
	return _appointmentTempl(s).Render(ctx, w)
}

func Appointment(o scheduling.AppointmentOutput, startHour int, opts ..._appointmentStateOpt) templ.Component {
	s := &_appointmentState{
		appointment: o,
		startHour:   startHour,
	}

	for _, opt := range opts {
		opt(s)
	}

	return s
}

func getAppointmentClass(s *_appointmentState) string {

	date, _ := time.Parse("2006-01-02", s.appointment.Date)

	parts := strings.Split(s.appointment.Hour, ":")

	hour, _ := strconv.ParseInt(parts[0], 10, 8)
	minutes, _ := strconv.ParseInt(parts[1], 10, 8)

	row := (hour-int64(s.startHour))*4 + minutes/15 + 2
	span := s.appointment.Duration / 15

	return fmt.Sprintf("sm:col-start-%d row-start-%d row-span-%d", date.Weekday(), row, span)
}

templ _appointmentTempl(s *_appointmentState) {
	<li
		data-id={ s.appointment.ID }
		class={ "appointment relative flex cursor-pointer z-[2000]", getAppointmentClass(s) }
		hx-stop="true"
		hx-swap="none"
		if s.hxGet != "" {
			hx-get={ s.hxGet }
		} else {
			hx-on:click="this.dispatchEvent(new CustomEvent('scheduling:select-appointment', {detail : {id: target.dataset.id}}))"
		}
	>
		<a class="group absolute inset-1 flex flex-col overflow-y-auto border border-blue-200 rounded-lg bg-blue-50 p-2 leading-5 hover:bg-blue-100">
			<p class="text-xs text-blue-500 group-hover:text-blue-500">
				<time datetime="2022-01-12T06:00">{ s.appointment.Hour }</time>
			</p>
			<p class="text-sm font-semibold text-blue-700">{ s.appointment.CustomerName }</p>
			<p class="text-blue-500 text-xs">{ s.appointment.ServiceName }<br/>{ s.appointment.ProfessionalName }</p>
		</a>
	</li>
}
