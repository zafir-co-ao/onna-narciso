package components

import (
	"fmt"
	"github.com/zafir-co-ao/onna-narciso/internal/scheduling"
	_shared "github.com/zafir-co-ao/onna-narciso/web/shared"
	"github.com/zafir-co-ao/onna-narciso/web/shared/components"
	"strconv"
)

type AppointmentReschedulerOptions struct {
	Appointment          scheduling.AppointmentOutput
	SelectedProfessional string
	SelectedService      string
	HxTarget             string
	HxSwap               string
	Professionals        []scheduling.Professional
	Services             []scheduling.Service
}

templ AppointmentReschedulerDialog(opts AppointmentReschedulerOptions) {
	@components.Dialog("Editar marcação", AppointmentReschedulerForm(opts))
}

templ AppointmentReschedulerForm(opts AppointmentReschedulerOptions) {
	<form hx-put={ fmt.Sprintf("/appointments/%v", opts.Appointment.ID) } hx-target={ opts.HxTarget } hx-swap={ opts.HxSwap }>
		<input type="hidden" name="id" value={ opts.Appointment.ID }/>
		<input type="hidden" name="week-day" value={ opts.Appointment.Date }/>
		<input type="hidden" name="professional-id" value={ opts.SelectedProfessional }/>
		<input type="hidden" name="service-id" value={ opts.SelectedService }/>
		@components.InputHiddenDisplay(opts.Appointment.CustomerName, "customer-name", opts.Appointment.CustomerName)
		<form
			hx-get={ fmt.Sprintf("/scheduling/dialogs/edit-appointment-dialog/%v", opts.Appointment.ID) }
			hx-swap="outerHTML"
			hx-target="#dialog"
			hx-trigger="change from:#professional_id"
		>
			<div class="mt-4">
				@components.Dropdown("professional-id",
					opts.SelectedProfessional,
					components.WithId("professional_id"),
					components.WithOptions(_shared.ProfessionalsToOptions(opts.Professionals)...),
				)
			</div>
			<div class="mt-4">
				@components.Dropdown("service-id",
					opts.SelectedService,
					components.WithOptions(_shared.ServicesToOptions(opts.Services)...),
				)
			</div>
		</form>
		<div class="mt-4">
			<input
				type="date"
				name="date"
				value={ opts.Appointment.Date }
				class="block w-full py-2.5 px-3 rounded-md text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-0 focus:outline-none focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6"
			/>
		</div>
		<div class="mt-4">
			<input
				type="time"
				name="hour"
				value={ opts.Appointment.Hour }
				class="block w-full py-2.5 px-3 rounded-md text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-0 focus:outline-none focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6"
			/>
		</div>
		<div class="mt-4">
			@components.Dropdown(
				"duration",
				strconv.Itoa(opts.Appointment.Duration),
				components.WithOptions(
					components.InputOption{"15 Minutos", "15"},
					components.InputOption{"30 Minutos", "30"},
					components.InputOption{"45 Minutos", "45"},
					components.InputOption{"1 Hora", "60"},
					components.InputOption{"1 Hora e 30 Minutos", "90"},
					components.InputOption{"2 Horas", "120"},
					components.InputOption{"2 Horas e 30 Minutos", "150"},
					components.InputOption{"3 Horas", "180"},
				),
			)
		</div>
		<div class="bg-gray-100 mt-8 px-4 py-3 sm:flex sm:justify-between sm:flex-row-reverse sm:px-10 -mx-10">
			<button
				type="submit"
				class="inline-flex w-full justify-center rounded-md bg-gray-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-gray-500 sm:ml-3 sm:w-auto"
			>
				Reagendar
			</button>
			<button
				type="submit"
				hx-delete={ fmt.Sprintf("/appointments/%v", opts.Appointment.ID) }
				hx-target={ opts.HxTarget }
				hx-swap={ opts.HxSwap }
				hx-confirm="Confirme para cancelar a marcação, essa operação não pode ser revertida."
				class="mt-3 inline-flex w-full justify-center rounded-md bg-red-500 px-3 py-2 text-sm font-semibold text-white shadow-sm ring-1 ring-inset ring-red-300 hover:bg-red-900 sm:mt-0 sm:w-auto"
			>
				Cancelar
			</button>
		</div>
	</form>
}
